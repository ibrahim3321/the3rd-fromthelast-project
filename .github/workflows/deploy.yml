name: Terraform + Build & Deploy (Full Stack)

on:
  push:
    branches:
      - main
  workflow_dispatch:

env:
  IMAGE_BACKEND: backend
  IMAGE_FRONTEND: frontend

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      # ✅ 1. سحب الكود
      - name: Checkout repository
        uses: actions/checkout@v4

      # ✅ 2. تسجيل الدخول إلى Azure
      - name: Azure Login
        uses: azure/login@v2
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}

      # ✅ 3. تثبيت Terraform
      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v3
        with:
          terraform_version: 1.9.5

      # ✅ 4. إنشاء ملف terraform.tfvars من السر
      - name: Generate terraform.tfvars from secret
        working-directory: ./terraform
        run: |
          echo '${{ secrets.NAME_INFRA }}' > terraform.tfvars
          echo "✅ Created terraform.tfvars:"
          cat terraform.tfvars

      # ✅ 5. Terraform Init + Apply
      - name: Terraform Init
        working-directory: ./terraform
        run: terraform init

      - name: Terraform Plan
        working-directory: ./terraform
        run: terraform plan -out=tfplan

      - name: Terraform Apply
        working-directory: ./terraform
        run: terraform apply -auto-approve

      # ✅ 6. استخراج اسم الـ ACR والـ AKS من Terraform Outputs
      - name: Get Terraform Outputs
        id: tfoutput
        working-directory: ./terraform
        run: |
          ACR_NAME=$(terraform output -raw acr_name)
          AKS_NAME=$(terraform output -raw aks_name)
          RG_NAME=$(terraform output -raw resource_group_name)
          echo "acr_name=$ACR_NAME" >> $GITHUB_OUTPUT
          echo "aks_name=$AKS_NAME" >> $GITHUB_OUTPUT
          echo "rg_name=$RG_NAME" >> $GITHUB_OUTPUT

      # ✅ 7. تسجيل الدخول في الـ ACR
      - name: Login to ACR
        run: az acr login --name ${{ steps.tfoutput.outputs.acr_name }}

      # ✅ 8. Build + Push Backend Image
      - name: Build & Push backend
        run: |
          ACR_LOGIN_SERVER=${{ steps.tfoutput.outputs.acr_name }}.azurecr.io
          docker build -t $ACR_LOGIN_SERVER/${{ env.IMAGE_BACKEND }}:latest ./backend
          docker push $ACR_LOGIN_SERVER/${{ env.IMAGE_BACKEND }}:latest

      # ✅ 9. Build + Push Frontend Image
      - name: Build & Push frontend
        run: |
          ACR_LOGIN_SERVER=${{ steps.tfoutput.outputs.acr_name }}.azurecr.io
          docker build -t $ACR_LOGIN_SERVER/${{ env.IMAGE_FRONTEND }}:latest ./frontend
          docker push $ACR_LOGIN_SERVER/${{ env.IMAGE_FRONTEND }}:latest

      # ✅ 10. ربط kubectl بالـ AKS
      - name: Get AKS credentials
        run: |
          az aks get-credentials \
            --resource-group ${{ steps.tfoutput.outputs.rg_name }} \
            --name ${{ steps.tfoutput.outputs.aks_name }} \
            --overwrite-existing

      # ✅ 11. نشر ملفات Kubernetes
      - name: Apply Kubernetes manifests
        run: |
          kubectl apply -f aks-yaml/

      # ✅ 12. التحقق من النشر
      - name: Verify rollout
        run: |
          kubectl rollout status deployment/backend-deployment || true
          kubectl rollout status deployment/frontend-deployment || true

